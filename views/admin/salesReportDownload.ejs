<%- include("../../views/partials/admin/header") %>

<!-- Report Content Wrapper -->
<div id="reportContent" style="overflow: hidden">
  <!-- Overall Stats -->
  <div class="row mb-4">
    <div class="col-md-4">
      <div class="card shadow-sm text-center border-0">
        <div class="card-body">
          <h5 class="card-title text-primary mb-2">Overall Sales Count</h5>
          <p id="overallSalesCount" class="display-6 text-secondary">
            <%= overallSalesCount || 0 %>
          </p>
        </div>
      </div>
    </div>
    <div class="col-md-4">
      <div class="card shadow-sm text-center border-0">
        <div class="card-body">
          <h5 class="card-title text-success mb-2">Overall Order Amount</h5>
          <p id="overallOrderAmount" class="display-6 text-secondary">
            ₹ <%= overallOrderAmount ? overallOrderAmount.toFixed(2) : '0.00' %>
          </p>
        </div>
      </div>
    </div>
    <div class="col-md-4">
      <div class="card shadow-sm text-center border-0">
        <div class="card-body">
          <h5 class="card-title text-danger mb-2">Overall Discount</h5>
          <p id="overallDiscount" class="display-6 text-secondary">
            ₹ <%= overallDiscount ? overallDiscount.toFixed(2) : '0.00' %>
          </p>
        </div>
      </div>
    </div>
  </div>

  <!-- Orders Table -->
  <div class="table-responsive" style="overflow: hidden">
    <table class="table table-bordered">
      <thead class="thead-light">
        <tr>
          <th>Order ID</th>
          <th>User</th>
          <th>Ordered Items</th>
          <th>Total Price</th>
          <th>Discount</th>
          <th>Final Amount</th>
          <th>Status</th>
          <th>Payment Method</th>
          <th>Date</th>
        </tr>
      </thead>
      <tbody>
        <% orders.forEach(order => { %>
        <tr>
          <td><%= order.orderId %></td>
          <td><%= order.user.name%></td>
          <td>
            <ul class="list-unstyled">
              <% order.orderedItems.forEach(item => { %>
              <li>
                <% if (item.product) { %> Product: <%= item.product.productName
                %><br />
                <% } else { %> Product: [Product information not available]<br />
                <% } %> Size: <%= item.size %>, Quantity: <%= item.quantity %>,
                Price: ₹ <%= item.price.toFixed(2) %>
              </li>
              <% }) %>
            </ul>
          </td>
          <td>₹ <%= (order.totalprice + order.deliveryCharge).toFixed(2) %></td>
          <td>₹ <%= order.discount.toFixed(2) %></td>
          <td>₹ <%= order.finalAmount.toFixed(2) %></td>
          <td><%= order.status %></td>
          <td><%= order.paymentMethod %></td>
          <td><%= new Date(order.createdOn).toLocaleString() %></td>
        </tr>
        <% }) %>
      </tbody>
    </table>
  </div>
</div>

<!-- Download Report Button -->
<div class="d-grid gap-2 d-md-flex justify-content-md-end">
  <button
    class="btn btn-outline-primary me-md-2"
    type="button"
    onclick="downloadPDF()"
  >
    Download PDF
  </button>
  <button
    class="btn btn-outline-success"
    type="button"
    onclick="downloadExcel()"
  >
    Download Excel
  </button>
</div>

<%- include("../../views/partials/admin/footer") %>

<script>
  function downloadPDF() {
    const { jsPDF } = window.jspdf;
    const doc = new jsPDF();
    const content = document.getElementById("reportContent");

    html2canvas(content).then((canvas) => {
      const imgData = canvas.toDataURL("image/png");
      const imgWidth = 190; // Adjust to fit page width
      const pageHeight = 297; // A4 size in mm (portrait)
      const imgHeight = (canvas.height * imgWidth) / canvas.width;

      // Check if content exceeds one page, add pages if necessary
      let heightLeft = imgHeight;
      let position = 10;

      doc.addImage(imgData, "PNG", 10, position, imgWidth, imgHeight);
      heightLeft -= pageHeight;

      while (heightLeft >= 0) {
        position = heightLeft - imgHeight;
        doc.addPage();
        doc.addImage(imgData, "PNG", 10, position, imgWidth, imgHeight);
        heightLeft -= pageHeight;
      }

      doc.save("invoice.pdf");
    });
  }
  function downloadExcel() {
    // Get table data
    const table = document.querySelector("table");
    const rows = Array.from(table.querySelectorAll("tr"));

    // Extract data from table rows and cells
    const excelData = rows.map((row) => {
      const cells = Array.from(row.querySelectorAll("th, td"));
      return cells.map((cell) => cell.innerText);
    });

    // Create a new workbook and worksheet
    const wb = XLSX.utils.book_new();
    const ws = XLSX.utils.aoa_to_sheet(excelData); // Convert array of arrays to a worksheet

    // Append the worksheet to the workbook
    XLSX.utils.book_append_sheet(wb, ws, "Report");

    // Save the Excel file
    XLSX.writeFile(wb, "report.xlsx");
  }
</script>
