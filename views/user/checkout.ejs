<%- include("../../views/partials/user/header") %>

<section class="breadcrumb-option" style="padding: 16px 0">
  <div class="container">
    <div class="row">
      <div class="col-lg-12">
        <div class="breadcrumb__text">
          <h4>Check Out</h4>
          <div class="breadcrumb__links">
            <a href="/">Home</a>
            <a href="/shop">Shop</a>
            <a href="/cart">Shopping Cart</a>
            <span>Checkout</span>
          </div>
        </div>
      </div>
    </div>
  </div>
</section>

<section class="checkout spad" style="padding-bottom: 50px">
  <div class="container">
    <div class="row">
      <div class="col-lg-7 col-md-6">
        <div class="checkout__address" style="margin-top: 31px">
          <h4 class="order__title"><b>Select Address</b></h4>
          <a href="/manage-addresses/add-address" class="btn btn-primary mb-3" style="margin-top: 11px;"
          >Add New Address</a
        >
          <div class="checkout__address__list" >
            <% if (addresses && addresses.address.length > 0) { %>
            <select name="selectedAddress" class="form-control" required>
              <% addresses.address.forEach((address) => { %>
              <option value="<%= address._id %>">
                <%= address.name %>, <%= address.houseName %>, <%=
                address.street %>, <%= address.city %>, <%= address.state %> -
                <%= address.pincode %>
              </option>
              <% }) %>
            </select>
            <% } else { %>
            <p class="text-danger">
              No addresses found. Please add an address in your Profile.
            </p>
            <% } %>
          </div>
        </div>
        <div class="checkout__payment" style="margin: 80px 0">
          <h4 class="order__title"><b>Select Payment Method</b></h4>
          <div class="checkout__payment__options" style="margin-top: 10px">
            <div class="form-check">
              <input
                class="form-check-input"
                type="radio"
                name="paymentMethod"
                value="Online Payment"
                id="onlinepayment"
                required
              />
              <label class="form-check-label" for="onlinepayment">
                Online Payment
              </label>
            </div>
            <div class="form-check">
              <input
                class="form-check-input"
                type="radio"
                name="paymentMethod"
                value="Wallet"
                id="wallet"
                required
              />
              <label class="form-check-label" for="wallet"> Wallet </label>
            </div>
            <div class="form-check">
              <input
                class="form-check-input"
                type="radio"
                name="paymentMethod"
                value="Cash on Delivery"
                id="cod"
                required
              />
              <label class="form-check-label" for="cod">
                Cash on Delivery (COD)
              </label>
            </div>
          </div>
        </div>
      </div>

      <div class="col-lg-4 col-md-6">
        <div
          class="cart__discount"
          style="margin-top: 45px; margin-bottom: 40px"
        >
          <h6 style="margin-bottom: 10px">Discount codes</h6>
          <% if (discount && discount > 0) { %>
          <form id="removeCouponForm" method="post">
            <button
              id="removeCoupon"
              type="submit"
              style="
             background-color: #dc3545;
    position: relative;
    top: 0px;
    padding: 11px 7px;
    font-size: 12px;
    border-radius: 5px;
 
              "
            >
              Remove Coupon
            </button>
          </form>

          <% } else { %>
          <!-- Show the apply coupon form if no discount is applied -->
          <form id="applyCouponForm">
            <input
              type="text"
              id="couponCodeInput"
              name="couponCode"
              placeholder="Coupon code"
            />
            <button type="submit">Apply</button>
          </form>
          <% } %>
        </div>

        <div class="checkout__order" style="margin-bottom: 5px; width: 400px">
          <h4 class="order__title">Your order</h4>
          <div class="checkout__order__products">
            Product <span>Total</span>
          </div>

          <!-- Dynamically display cart items -->
          <ul class="checkout__total__products">
            <% cartItems.forEach((item, index) => { %>
            <li>
              <%= index + 1 %>. <%= item.productId.productName %>
              <span style="margin-left: 15px;">Size : <%=item.size%></span>
              <span style="margin-left:  25px;">Qty : <%=item.quantity%></span>
              <span><%= item.totalPrice.toFixed(2) %></span>
            </li>
            <% }) %>
          </ul>

          <!-- Subtotal, Discount, and Total -->
          <ul class="checkout__total__all">
            <li>
              Subtotal
              <span><%= totalPrice.toFixed(2) %></span>
            </li>
            <% if (discount && discount > 0) { %>
            <li>
              Discount
              <span>- <%= discount.toFixed(2) %></span>
            </li>
            <% } %>
            <li>
              Total
              <span><%= (totalPrice - (discount || 0)).toFixed(2) %></span>
            </li>
          </ul>

          <button type="submit" class="site-btn" id="place-order">
            PLACE ORDER
          </button>
        </div>
      </div>
    </div>
  </div>
</section>

<%- include("../../views/partials/user/footer") %>

<script>
  document.addEventListener("DOMContentLoaded", function () {
    // Apply Coupon Event Listener
    const applyCouponForm = document.getElementById("applyCouponForm");
    if (applyCouponForm) {
      applyCouponForm.addEventListener("submit", async function (event) {
        event.preventDefault();

        const couponCode = document
          .getElementById("couponCodeInput")
          .value.trim();

        if (!couponCode) {
          Swal.fire({
            icon: "error",
            title: "Empty Coupon Code",
            text: "Please enter a valid coupon code.",
          });
          return;
        }

        try {
          const response = await fetch("/addCoupon", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({ couponCode }),
          });

          const result = await response.json();

          if (response.ok) {
            window.location.reload(); // Reload the page if coupon is applied successfully
          } else {
            Swal.fire({
              icon: "error",
              title: "Oops...",
              text: result.message,
            });
          }
        } catch (error) {
          Swal.fire({
            icon: "error",
            title: "Error",
            text: "An error occurred while applying the coupon.",
          });
        }
      });
    }

    // Remove Coupon Event Listener
    const removeCouponButton = document.getElementById("removeCoupon");
    if (removeCouponButton) {
      removeCouponButton.addEventListener("click", async function (event) {
        event.preventDefault();
        console.log("Remove coupon clicked");

        try {
          const response = await fetch("/removeCoupon", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
          });

          const result = await response.json();

          if (response.ok) {
            window.location.reload(); // Reload the page if the coupon was removed
          } else {
            Swal.fire({
              icon: "error",
              title: "Oops...",
              text: result.message || "Failed to remove the coupon.",
            });
          }
        } catch (error) {
          Swal.fire({
            icon: "error",
            title: "Error",
            text: "An error occurred while removing the coupon.",
          });
        }
      });
    }
  });

  document.querySelector("#place-order").addEventListener("click", async () => {
    const selectedAddress = document.querySelector(
      'select[name="selectedAddress"]'
    ).value;
    const paymentMethod = document.querySelector(
      'input[name="paymentMethod"]:checked'
    ).value;

    try {
      const response = await fetch("/place-order", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({
          selectedAddress,
          paymentMethod,
        }),
      });

      const data = await response.json();

      if (data.success) {
        if (paymentMethod === "Online Payment") {
          const { finalAmount, orderId, razorpayKey } = data;

          const options = {
            key: razorpayKey,
            amount: finalAmount * 100, // Convert amount to paise
            currency: "INR",
            name: "Blendify",
            description: "Purchase Description",
            order_id: orderId,
            handler: function (response) {
              verifyPayment(
                response.razorpay_payment_id,
                response.razorpay_order_id,
                response.razorpay_signature
              );
            },
            modal: {
              ondismiss: function () {
                window.location.href = `/payment-failed/${data.message}`;
              },
            },
            prefill: {
              name: "Customer Name",
              email: "customer@example.com",
              contact: "9999999999",
            },
            theme: {
              color: "#bf3320",
            },
          };

          const rzp = new Razorpay(options);
          rzp.open();
        } else {
          window.location.href = `/order-confirmation/${data.message}`;
        }
      } else {
        Swal.fire({
          title: "Error!",
          text: data.error || "Failed to Place Order",
          icon: "error",
          confirmButtonText: "OK",
        });
      }
    } catch (error) {
      console.error("Error placing order:", error);
      Swal.fire({
        title: "Error!",
        text: "An error occurred while placing the order. Please try again.",
        icon: "error",
        confirmButtonText: "OK",
      });
    }
  });

  async function verifyPayment(
    razorpay_payment_id,
    razorpay_order_id,
    razorpay_signature
  ) {
    console.log("Payment verification details:", {
      razorpay_payment_id,
      razorpay_order_id,
      razorpay_signature,
    });

    try {
      const response = await fetch("/verify-payment", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({
          razorpay_payment_id,
          razorpay_order_id,
          razorpay_signature,
        }),
      });

      const data = await response.json();
      console.log("Response from server:", data);

      if (data.success) {
        window.location.href = `/order-confirmation/${data.message}`;
      } else {
        Swal.fire({
          title: "Payment Verification Failed",
          text: data.error || "An error occurred during payment verification.",
          icon: "error",
          confirmButtonText: "OK",
        }).then(() => {
          window.location.href = `/payment-failed/${data.message}`;
        });
      }
    } catch (error) {
      console.error("Error verifying payment:", error);
      Swal.fire({
        title: "Error",
        text: "Unable to verify payment due to a network error.",
        icon: "error",
        confirmButtonText: "OK",
      }).then(() => {
        window.location.href = `/payment-failed/${data.message}`;
      });
    }
  }
</script>
