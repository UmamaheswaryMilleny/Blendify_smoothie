<%- include("../../views/partials/user/header") %>

<style>
body {
  background: url("/images/userImg/home/img2_1.png") no-repeat center center fixed;
  background-size: cover;
  color: #fff;
  font-family: "Poppins-Regular", sans-serif;
  overflow-x: hidden;
}
/* .header__top {
  padding: 0 !important;
} */
.forgot-password-link {
  font-size: 0.875rem;
  text-decoration: none;
  color: rgba(139, 0, 0);
}
.forgot-password-link:hover {
  color: rgba(139, 0, 0);
  text-decoration: underline;
}

.list-group-item.active {
  background-color: rgba(139, 0, 0);
  border-color: rgba(139, 0, 0);
}

h5 {
  color: #fff;
  padding: 2px;
}

.btn {
  width: 30%; /* Make buttons responsive */
  margin: 15px 0px;
  background-color: #fa8a00 !important;
  color: white;
}

.profile-page {
  min-height: 70vh;
  padding: 20px;
}

.form-control {
  width: 100%; /* Adjust form width for responsiveness */
}

button {
  width: 100%; /* Make buttons responsive */
  background-color: rgba(139, 0, 0);
  color: white !important;
}
button:hover {
  color: white !important;
}
.card{
  border-radius: 0 !important;
}

#profileCard {
  background: rgba(139, 0, 0, 0.85);
  font-family: "Poppins-Regular" !important;
  padding: 20px;
  /* border-radius: 10px; */
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
}

.btn-primary:hover {
  background-color: rgb(210 118 48);
  border-color: rgba(139, 0, 0);
}
.btn-primary:focus {
  background-color: #fa8a00 !important;
  border-color: rgba(139, 0, 0);
}

input {
  border: none;
  padding-left: 10px;
}

.container {
  max-width: 1200px;
  margin: 0 auto;
  /* padding: 15px; */
}

.row {
  display: flex;
  flex-wrap: wrap;
}

.col-md-9 {
  flex: 1 1 70%;
  max-width: 70%;
  padding: 15px;
}

.col-md-9.profile-content {
  margin-top: 20px;
}

.card {
  margin-bottom: 20px;
}

.form-group {
  margin-bottom: 20px;
}

/* Sidebar */
.sidebar {
  flex: 1 1 30%;
  max-width: 30%;
  background: #333;
  color: #fff;
  padding: 15px;
}

.sidebar .list-group-item {
  margin-bottom: 10px;
  border: none;
  text-align: center;
  padding: 10px;
}

/* Responsive Media Queries */
@media (max-width: 992px) {
  .col-md-9,
  .sidebar {
    flex: 1 1 100%;
    max-width: 100%;
  }

  .profile-page {
    padding: 10px;
  }

  .btn {
    width: 30%; /* Buttons remain responsive */
  }
}

@media (max-width: 576px) {
  h3 {
    font-size: 1.5rem;
  }

  h5 {
    font-size: 1rem;
  }

  .btn {
    font-size: 0.9rem;
    padding: 10px;
  }


  input {
    font-size: 0.9rem;
  }
}


</style>

<div class="container mt-5 profile-page">
  <div class="row">
    <!-- Sidebar -->
    <%- include("../../views/partials/user/profile-sidebar") %>

    <!-- Profile Content -->
    <div class="col-md-9 profile-content">
      <h3 class="mb-4"><b>My Profile</b></h3>

      <!-- Profile Display -->
      <div class="card mb-4" id="profileCard">
        <div class="card-body">
          <h5>Name: <span id="display-name"><%= user.name %></span></h5>
          <h5>Email: <span class="email-value"><%= user.email %></span></h5>
          <h5>Phone: <span id="display-phone"><%= user.phone %></span></h5>
          <button type="button" class="btn edit-btn">Edit</button>
        </div>
      </div>

      <!-- Profile Edit Form -->
      <form id="editProfileForm" style="display: none;background-color: rgba(139, 0, 0, 0.85); padding: 25px;">
        <div class="form-group mb-3">
          <label for="name">Name</label>
          <input
            type="text"
            id="name"
            class="form-control"
            value="<%= user.name %>"
          />
          <small
            id="nameError"
            class="text-danger"
            style="display: none"
          ></small>
        </div>
        <div class="form-group mb-3">
          <label for="phone">Phone</label>
          <input
            type="text"
            id="phone"
            class="form-control"
            value="<%= user.phone %>"
          />
          <small
            id="phoneError"
            class="text-danger"
            style="display: none"
          ></small>
        </div>
        <div class="form-group d-flex">
          <a href="/forgot-password" class="forgot-password-link ms-auto" style="color: white;">
            <i class="fa fa-key"></i> Forgot Password?
          </a>
        </div>
        <div>
          <button
            type="button"
            class="btn btn-secondary cancel-btn"
            style="background-color: red !important ;border: none !important;"
          >
            Cancel
          </button>
          <button
            type="button"
            class="btn save-btn btn-primary"
            style="background-color: rgba(139, 0, 0)"
          >
            Save
          </button>
        </div>
      </form>
    </div>
  </div>
</div>

<script>
  document.addEventListener("DOMContentLoaded", function () {
    const editButton = document.querySelector(".edit-btn");
    const cancelButton = document.querySelector(".cancel-btn");
    const saveButton = document.querySelector(".save-btn");
    const editForm = document.getElementById("editProfileForm");
    const profileCard = document.getElementById("profileCard");
    const displayName = document.getElementById("display-name");
    const displayPhone = document.getElementById("display-phone");
    const nameInput = document.getElementById("name");
    const phoneInput = document.getElementById("phone");
    const nameError = document.getElementById("nameError");
    const phoneError = document.getElementById("phoneError");

    // Regex patterns for validation
    const namePattern = /^[a-zA-Z\s]+$/;
    const phonePattern = /^[1-9][0-9]{9}$/;

    // Show form when clicking "Edit" button
    editButton.addEventListener("click", function () {
      profileCard.style.display = "none"; // Hide the card
      editForm.style.display = "block"; // Show the edit form
    });

    // Hide form when clicking "Cancel" button
    cancelButton.addEventListener("click", function () {
      profileCard.style.display = "block"; // Show the card again
      editForm.style.display = "none"; // Hide the edit form
      clearErrors(); // Clear errors when cancelling
    });

    // Save button click handler
    saveButton.addEventListener("click", function () {
      // Clear any previous error messages
      clearErrors();

      // Validate name and phone
      const name = nameInput.value.trim();
      const phone = phoneInput.value.trim();
      let isValid = true;

      // Name validation: only letters and spaces, but no only spaces allowed
      if (
        !name ||
        !namePattern.test(name) ||
        name.replace(/\s/g, "").length === 0
      ) {
        nameError.textContent =
          "Name must contain only letters and spaces, and cannot be empty or just spaces.";
        nameError.style.display = "block"; // Show the error message
        isValid = false;
      }

      // Phone validation: only digits allowed, must be exactly 10 digits, cannot be all zeros
      if (!phonePattern.test(phone)) {
        phoneError.textContent =
          "Phone must be a 10-digit number and cannot be all 0.";
        phoneError.style.display = "block"; // Show the error message
        isValid = false;
      }

      // If invalid, prevent submission and show error messages
      if (!isValid) {
        return;
      }

      // If valid, send the data to the backend
      fetch("/update-profile", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({
          userId: "<%= user._id %>",
          name,
          phone,
        }),
      })
        .then((response) => response.json())
        .then((data) => {
          if (data.message) {
            Swal.fire({
              icon: "success",
              title: "Profile Updated",
              text: data.message,
            });

            // Update displayed values
            displayName.textContent = name;
            displayPhone.textContent = phone;

            // Show the profile card again and hide the form
            profileCard.style.display = "block";
            editForm.style.display = "none";
          } else if (data.error) {
            // Handling the error message from the backend
            Swal.fire({
              icon: "error",
              title: "Error",
              text: data.error, // Show the specific error message from backend
            });
          } else {
            Swal.fire({
              icon: "error",
              title: "Error",
              text: "Error updating profile",
            });
          }
        })
        .catch((error) => {
          console.error("Error:", error);
          Swal.fire({
            icon: "error",
            title: "Error",
            text: "An error occurred while updating the profile",
          });
        });
    });

    // Clear error messages
    function clearErrors() {
      nameError.style.display = "none";
      phoneError.style.display = "none";
      nameError.textContent = "";
      phoneError.textContent = "";
    }
  });
</script>

<!--footer begins-->
<%- include("../../views/partials/user/footer") %>
